# Generated by Django 3.1.4 on 2024-12-13 06:57

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('projects', '0001_initial'),
        ('admin_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Assignment not submitted'), (2, 'Assignment submitted'), (3, 'Assignment not cleared'), (4, 'Assignment cleared'), (5, 'Assignment on hold'), (6, 'No assignment')], default=1)),
                ('submitted_assignment', models.URLField(null=True)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssignmentFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.IntegerField(choices=[(3, 'Assignment not cleared'), (4, 'Assignment cleared'), (5, 'Assignment on hold')], default=3)),
                ('comments', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('country_code', models.CharField(default='91', max_length=5)),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Please Enter correct Contact no.', regex='^\\d{7,15}$')])),
                ('password', models.TextField()),
                ('city', models.CharField(max_length=100)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_pic', models.URLField(null=True)),
                ('will_to_travel_to_local_office', models.BooleanField(default=False)),
                ('hear_about_flexibees', models.CharField(choices=[('others', 'Others'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('twitter', 'Twitter'), ('whatsapp', 'WhatsApp'), ('referral_scheme', 'Referral Scheme'), ('other_website_or_women_group', 'Other website or Women group'), ('google_search', 'Google search'), ('news_or_media', 'News or Media'), ('word_of_mouth', 'Word of mouth')], max_length=50)),
                ('hear_about_detailed', models.TextField(blank=True, null=True)),
                ('brief_description', models.TextField(blank=True)),
                ('profile_summary', models.TextField(blank=True)),
                ('total_year_of_experience', models.FloatField(default=0.0)),
                ('relevant_experience', models.IntegerField(blank=True, null=True)),
                ('relevantexp', models.JSONField(blank=True, default=dict)),
                ('years_of_break', models.FloatField(default=0.0)),
                ('hire', models.BooleanField(default=True)),
                ('otp', models.TextField(blank=True, null=True)),
                ('portfolio_link', models.URLField(null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('legacy_skills', models.TextField(blank=True)),
                ('legacy_last_role', models.TextField(blank=True)),
                ('legacy_prior_roles', models.TextField(blank=True)),
                ('legacy_last_employer', models.TextField(blank=True)),
                ('legacy_prior_employers', models.TextField(blank=True)),
                ('active_projects', models.PositiveIntegerField(default=0)),
                ('phone_verified', models.BooleanField(default=False)),
                ('email_verified', models.BooleanField(default=False)),
                ('read_notifications', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(blank=True), blank=True, default=list, size=None)),
                ('lifestyle_responses', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1_a', 'Studying part time'), ('1_b', 'Studying full time'), ('1_c', 'Just graduated'), ('1_d', 'On a break'), ('1_e', 'Currently working full-time'), ('1_f', 'Currently working part-time'), ('1_g', 'Currently looking for work'), ('2_a', 'I live alone'), ('2_b', 'I live with friends'), ('2_c', 'I live in a nuclear family'), ('2_d', 'I live in a joint family'), ('3_2_c_a', 'I live with Parents'), ('3_2_c_b', 'I live with Spouse'), ('3_2_c_c', 'I live with Child'), ('3_2_c_d', 'I live with Spouse and Child'), ('3_e', 'I live with Others'), ('3_2_d_a', 'I live with Paternal/ Maternal Relatives'), ('3_2_d_b', 'I live with Spouse/ Maternal/ Paternal Relatives'), ('3_2_d_c', 'I live with Child / Maternal/ Paternal Relatives'), ('3_2_d_d', 'I live with Spouse and Child/ Maternal/ Paternal Relatives'), ('4_a', 'My-self'), ('4_b', 'Part time help'), ('4_c', 'Full time help'), ('4_d', 'Full time live-in-help')], max_length=50), blank=True, default=list, size=None)),
                ('wakeup_time', models.TimeField(blank=True, null=True)),
                ('total_available_hours', models.FloatField(default=0.0)),
                ('timeline_completed', models.BooleanField(default=False)),
                ('questionnaire_completed', models.BooleanField(default=False)),
                ('timeline_last_updated', models.DateTimeField(null=True)),
                ('mylife_last_updated', models.DateTimeField(null=True)),
                ('profile_last_updated', models.DateTimeField(null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('flexibees_selected', models.PositiveIntegerField(default=0)),
                ('skills_resume', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1000), blank=True, default=list, size=None)),
                ('last_used_andriod_app_version', models.CharField(blank=True, max_length=10, null=True)),
                ('last_used_ios_app_version', models.CharField(blank=True, max_length=10, null=True)),
                ('notification_count', models.PositiveSmallIntegerField(default=0)),
                ('last_notified', models.DateTimeField(null=True)),
                ('previous_email', models.EmailField(blank=True, max_length=254)),
                ('status', models.CharField(choices=[('1', 'Signed Up'), ('2', 'Profile Completed'), ('3', 'Ready For Functional'), ('4', 'Functional Interview Scheduled'), ('5', 'Functional Interview Completed'), ('6', 'Functional Interview Failed'), ('7', 'Ready For Flexifit'), ('8', 'Flexifit Scheduled'), ('9', 'Flexifit Interview Failed'), ('10', 'Flexifit Completed'), ('11', 'Ready for Client'), ('12', 'Job Ready'), ('13', 'Job Interested'), ('14', 'Client Interview Scheduled'), ('15', 'Client Interview Completed'), ('16', 'Project Selected'), ('17', 'Project Confirmed'), ('18', 'Offered'), ('19', 'Accepted'), ('20', 'Project Started'), ('21', 'Project In Progress'), ('22', 'Project Suspended'), ('23', 'Project Completed'), ('24', 'Dormant'), ('25', 'Unsubscribe/Delete')], max_length=3, null=True)),
                ('joining_status', models.CharField(choices=[('1', 'NOW'), ('2', 'LATER')], max_length=3, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.URLField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateLanguage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proficiency', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Advanced', 'Advanced'), ('Expert', 'Expert')], default='Beginner', max_length=20)),
                ('read', models.BooleanField(default=False)),
                ('write', models.BooleanField(default=False)),
                ('speak', models.BooleanField(default=False)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('issued_by', models.CharField(max_length=200)),
                ('issue_date', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Flexifit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Flexifit interview scheduled'), (2, 'Candidate selected'), (3, 'Candidate not selected'), (4, 'Flexifit on hold')], default=1)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='Functional',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Functional interview scheduled'), (2, 'Functional interview cleared'), (3, 'Functional interview not cleared'), (4, 'Functional on hold')], default=1)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('no_of_notifications_on_my_typical_day', models.PositiveSmallIntegerField(default=0)),
                ('last_notified', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='WebUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('country_code', models.CharField(default='91', max_length=5)),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Please Enter correct Contact no.', regex='^\\d{7,15}$')])),
                ('converted', models.BooleanField(default=False)),
                ('converted_date', models.DateTimeField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shortlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Notification not sent'), (2, 'Notification sent/Waiting for response')], default=1)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='SelfAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('comments', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='InterestCheckAndSelfEvaluation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(1, 'Interested, Self evaluation not done'), (2, 'Interested, Self evaluation done'), (3, 'Not interested')])),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='FunctionalFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills_feedback', django.contrib.postgres.fields.jsonb.JSONField(default=list)),
                ('overall_score', models.IntegerField(default=0)),
                ('recommendation', models.IntegerField(choices=[(2, 'Functional interview cleared'), (3, 'Functional interview not cleared'), (4, 'Functional on hold')], default=3)),
                ('comments', models.TextField(blank=True)),
                ('interview_summary', models.URLField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feedback_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.adminuser')),
                ('functional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.functional')),
            ],
        ),
        migrations.CreateModel(
            name='FlexifitFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.IntegerField(choices=[(2, 'Candidate selected'), (3, 'Candidate not selected'), (4, 'Flexifit on hold')], default=3)),
                ('comments', models.TextField(blank=True)),
                ('interview_summary', models.URLField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('feedback_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.adminuser')),
                ('flexifit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.flexifit')),
            ],
        ),
        migrations.CreateModel(
            name='FinalSelection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('send_to_bdmanager', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Flexibees selected'), (2, 'Sent to BD manager'), (3, 'Client selected'), (4, 'Client rejected'), (5, 'Partial selected'), (6, 'Selected')], default=1)),
                ('recruiter_comments', models.TextField()),
                ('final_notification_sent', models.PositiveSmallIntegerField(default=0)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('flexifit_feedback', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.flexifitfeedback')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
            ],
        ),
        migrations.CreateModel(
            name='EmploymentDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_type', models.CharField(choices=[('Full Time Employee', 'Full Time Employee'), ('Full Time Contractor', 'Full Time Contractor'), ('Part Time Employee', 'Part Time Employee'), ('Part Time Contractor', 'Part Time Contractor'), ('Consultant', 'Consultant'), ('Paid Internship', 'Paid Internship'), ('Unpaid Internship', 'Unpaid Internship')], default='Full Time Employee', max_length=50)),
                ('company', models.CharField(max_length=200)),
                ('currently_working', models.BooleanField(default=False)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('domains', models.ManyToManyField(to='admin_app.Domain')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_app.role')),
            ],
        ),
        migrations.CreateModel(
            name='EmailChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('previous_email', models.EmailField(max_length=254)),
                ('otp', models.TextField(blank=True)),
                ('verified', models.BooleanField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_college', models.CharField(max_length=200)),
                ('education', models.CharField(max_length=100)),
                ('course', models.CharField(max_length=100)),
                ('field_of_study', models.CharField(max_length=100)),
                ('start_date', models.PositiveIntegerField()),
                ('end_date', models.PositiveIntegerField()),
                ('grade', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='ClientFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.IntegerField(choices=[(3, 'Client selected'), (4, 'Client rejected'), (5, 'Partial selected')], default=4)),
                ('comments', models.TextField(blank=True)),
                ('attachment', models.URLField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='candidate.candidate')),
                ('feedback_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='admin_app.adminuser')),
                ('final_selection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='candidate.finalselection')),
            ],
        ),
    ]
