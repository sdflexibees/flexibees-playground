# Generated by Django 3.1.4 on 2024-12-13 06:57

import apps.finance.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('candidate', '0001_initial'),
        ('common', '0001_initial'),
        ('projects', '0001_initial'),
        ('employer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legal_entity_name', models.CharField(max_length=255, verbose_name='Legal Entity Name')),
                ('brand_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Brand Name (If any)')),
                ('date_of_incorporation', models.DateField(blank=True, null=True, verbose_name='Date of Incorporation')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('state', models.CharField(max_length=255, verbose_name='State')),
                ('zip_code', models.CharField(max_length=10, verbose_name='Zip Code')),
                ('registered_under_gst_act', models.BooleanField(default=False, verbose_name='Whether Registered under GST Act 2017?')),
                ('type_of_registration', models.CharField(choices=[('1', 'Registered Business - Regular'), ('2', 'Consumer'), ('3', 'Overseas'), ('4', 'Registered Business - Composition'), ('5', 'Special Economic Zone'), ('6', 'SEZ Developer'), ('7', 'Tax Deductor'), ('8', 'Other')], default='1', max_length=255, verbose_name='Type of Registration')),
                ('gstin_uin', models.CharField(blank=True, max_length=50, null=True, verbose_name='GSTIN/UIN')),
                ('gst_certificate', models.FileField(blank=True, null=True, upload_to='gst_certificates/', validators=[apps.finance.models.validate_file_or_image])),
                ('registered_under_msmed', models.BooleanField(default=False, verbose_name='Whether Registered under MSMED?')),
                ('msme_registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='MSME Registration Number')),
                ('company_sector', models.CharField(choices=[('1', 'Agriculture'), ('2', 'Advertising & Marketing'), ('3', 'Analytics'), ('4', 'Apparel & Fashion'), ('5', 'Architecture & Planning'), ('6', 'Automobile Industry'), ('7', 'BPO / KPO / LPO'), ('8', 'Computer and Electronics Manufacturing'), ('9', 'Construction'), ('10', 'Consumer Discretionary /Luxury / Jewellery / Arts'), ('11', 'E-commerce'), ('12', 'EdTech / E-Learning'), ('13', 'Education'), ('14', 'Environmental Services /Sustainability / Renewable energy'), ('15', 'Event Management / Entertainment'), ('16', 'Financial Services'), ('17', 'FinTech'), ('18', 'FMCG / Food & Beverage'), ('19', 'Healthcare / Hospital management'), ('20', 'HealthTech'), ('1', 'HR / Recruitments'), ('2', 'Industrial Engineering / Automation'), ('3', 'Information Technology & Services'), ('4', 'Logistics & Supply Chain'), ('5', 'Management Consulting / Legal Services'), ('6', 'Manufacturing / Materials'), ('7', 'Non-profit'), ('8', 'Pharmaceuticals / Medical Related'), ('9', 'Property Management / Facility Service'), ('10', 'Publishing / Library / Book Shopss'), ('11', 'Real Estate'), ('12', 'Retail'), ('13', 'SAAS / PAAS'), ('14', 'Security'), ('15', 'Sports'), ('16', 'Tech / IT Consulting'), ('17', 'Telecommunication'), ('18', 'Travel / Tourism /Transport'), ('19', 'Utilities'), ('20', 'Venture Capital & Private Equity'), ('19', 'Wellness & Fitness'), ('20', 'Other')], default='1', max_length=255, verbose_name='Company Sector')),
                ('company_setup', models.CharField(choices=[('1', 'Start - up'), ('2', 'Small/Medium Enterprise'), ('3', 'Large Corporates'), ('4', 'Others')], default='1', max_length=255, verbose_name='Company Setup')),
                ('company_head_count', models.PositiveIntegerField(verbose_name='Company Head Count')),
                ('authorized_person_name', models.CharField(max_length=255, verbose_name='Name of authorized person for signing the contract')),
                ('authorized_person_designation', models.CharField(max_length=255, verbose_name='Designation of the authorized person')),
                ('authorized_person_email', models.EmailField(max_length=254, verbose_name='Mail id of the authorized person')),
                ('accounts_contact_person_name', models.CharField(max_length=255, verbose_name='Contact Person in Accounts/Finance Department')),
                ('accounts_contact_person_email', models.EmailField(max_length=254, verbose_name='Email Id of Accounts/Finance Person')),
                ('accounts_contact_person_phone', models.CharField(max_length=20, verbose_name='Phone no of Accounts/Finance Person')),
                ('send_hard_copy_invoice', models.BooleanField(default=False, verbose_name='Whether hard copy invoice to be sent for billing (by default we send soft copy only, but hard copy can be sent on request)')),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='bank_documents/', validators=[apps.finance.models.validate_file_or_image])),
                ('pan_card_number', models.CharField(max_length=125, verbose_name='PAN Card Number')),
                ('vat_tin_number', models.CharField(blank=True, max_length=125, null=True, verbose_name='VAT/TIN Number')),
                ('cin', models.CharField(blank=True, max_length=255, null=True, verbose_name='CIN')),
                ('state_code', models.CharField(max_length=125, verbose_name='State Code')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employer.employer')),
            ],
            options={
                'verbose_name': 'client',
                'verbose_name_plural': 'clients',
                'db_table': 'clients',
            },
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_contact_person_name', models.CharField(blank=True, max_length=255, null=True, verbose_name="Alternative Contact Person's Name")),
                ('alt_contact_person_number', models.CharField(blank=True, max_length=125, null=True, verbose_name="Alternative Contact Person's Phone")),
                ('alt_contact_person_relation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Relation with Alternative Contact Person')),
                ('number_of_current_projects', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(3)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('candidate', models.ForeignKey(limit_choices_to={'status__in': ['17', '18', '19', '20', '21', '22', '23', '24', '25']}, on_delete=django.db.models.deletion.CASCADE, related_name='consultant_profile', to='candidate.candidate')),
            ],
            options={
                'verbose_name': 'consultant',
                'verbose_name_plural': 'consultants',
                'db_table': 'finance_consultant',
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facebook_profile', models.URLField(blank=True, null=True, verbose_name='Facebook Profile URL')),
                ('instagram_profile', models.URLField(blank=True, null=True, verbose_name='Instagram Profile URL')),
                ('linkedin_profile', models.URLField(blank=True, null=True, verbose_name='LinkedIn Profile URL')),
                ('twitter_profile', models.URLField(blank=True, null=True, verbose_name='Twitter Profile URL')),
                ('permit_social_media_tagging', models.BooleanField(default=False, verbose_name='Permit Social Media Tagging')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.users')),
            ],
            options={
                'verbose_name': 'social media',
                'verbose_name_plural': 'social medias',
                'db_table': 'finance_social_media',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultant_contract_type', models.CharField(choices=[('1', 'External Consultant'), ('2', 'Internal Consultant - BDM'), ('3', 'Internal Consultant - Non BDM')], default='1', max_length=255, verbose_name='Consultant Contract Type')),
                ('client_contract_type', models.CharField(choices=[('1', 'International'), ('2', 'Domestic - Proprietorship'), ('3', 'Domestic - Non Proprietorship'), ('4', 'Placement - Full Time'), ('5', 'Placement - Part Time')], default='1', max_length=255, verbose_name='Client Contract Type')),
                ('notice_period', models.IntegerField(verbose_name='Notice Period (in days)')),
                ('signed_date', models.DateField(blank=True, null=True)),
                ('consultant_amount', models.IntegerField(verbose_name='Consultant Amount')),
                ('consultant_aggregate_amount', models.IntegerField(verbose_name='Consultant Aggregate Amount')),
                ('client_amount', models.IntegerField(verbose_name='Client Amount')),
                ('status', models.CharField(choices=[('1', 'Draft'), ('2', 'Published'), ('3', 'Pending Consultant Signature'), ('4', 'Pending Client Signature'), ('5', 'Signed'), ('6', 'In Progress'), ('7', 'Suspended'), ('8', 'Completed'), ('9', 'Pending Renewal'), ('10', 'Withdrawn')], default=1, max_length=125, verbose_name='Status')),
                ('pdf_link', models.URLField(blank=True, null=True, verbose_name='Link to Signed PDF')),
                ('digi_sign_link', models.URLField(blank=True, null=True, verbose_name='Digital Signature Link')),
                ('signatory_image', models.ImageField(blank=True, null=True, upload_to='signatures/images/', verbose_name='Signature')),
                ('signatory_designation', models.CharField(max_length=255, verbose_name='Signatory Designation')),
                ('bdm_gross_margin_commission_percentage', models.IntegerField(blank=True, null=True, verbose_name='BDM Gross Margin Percentage')),
                ('bdm_lifetime_commission_percentage', models.IntegerField(blank=True, null=True, verbose_name='BDM Life Time Percentage')),
                ('director_name', models.CharField(choices=[('1', 'Shreya Prakash'), ('2', 'Rashmi Rammohan'), ('3', 'Deepa Narayanaswamy')], default='1', max_length=255, verbose_name='Director')),
                ('director_email', models.EmailField(max_length=254, verbose_name='Director email')),
                ('working_hours_per_day', models.IntegerField(default=8, verbose_name='Working hours per day')),
                ('working_days_in_a_week', models.IntegerField(default=5, verbose_name='Working days in a week')),
                ('paid_leaves', models.IntegerField(default=3, verbose_name='Number of paid leaves')),
                ('initial_fee_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of the consideration for the first installment (e.g., 70.00)', max_digits=5, null=True)),
                ('second_fee_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Percentage of the consideration for the second installment (e.g., 30.00)', max_digits=5, null=True)),
                ('initial_invoice_date', models.DateField(auto_now_add=True, verbose_name='Date of the first installment invoice')),
                ('second_invoice_date', models.DateField(auto_now_add=True, verbose_name='Date of the first installment invoice')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.client')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.consultant')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='employer.job')),
                ('pricing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.pricing')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.project')),
                ('project_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='projects.otherprojectdetail')),
            ],
            options={
                'verbose_name': 'contract',
                'verbose_name_plural': 'contracts',
                'db_table': 'contracts',
            },
        ),
        migrations.CreateModel(
            name='ConsultantInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=125, null=True, verbose_name='Invoice Number')),
                ('work_description_type', models.CharField(choices=[('1', 'For the Period'), ('2', 'For the Project Milestone')], default='1', max_length=255, verbose_name='Work Description Type')),
                ('signature', models.ImageField(blank=True, null=True, upload_to='consultant/signatures/', verbose_name='Signature')),
                ('time_sheet_from', models.DateField(verbose_name='Timesheet From')),
                ('time_sheet_to', models.DateField(verbose_name='Timesheet To')),
                ('time_sheet_hours', models.PositiveIntegerField(verbose_name='Timesheet Hours')),
                ('status', models.CharField(choices=[('1', 'payment pending'), ('2', 'Discrepancy'), ('3', 'payment done')], default='1', max_length=255, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.contract')),
            ],
            options={
                'verbose_name': 'Consultant Invoice',
                'verbose_name_plural': 'Consultant Invoices',
                'db_table': 'consultant_invoices',
            },
        ),
        migrations.CreateModel(
            name='ClientInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terms_of_payment', models.CharField(choices=[('1', 'Within 3 days'), ('2', 'Within 5 days'), ('3', 'Within 7 days'), ('4', 'Within 10 days'), ('5', 'Within 15 days'), ('6', 'Within 30 days')], default='1', max_length=255, verbose_name='Terms of Payment')),
                ('description_of_services', models.CharField(choices=[('1', 'Manpower Supply Services'), ('2', 'Management Consultancy')], default='1', max_length=255, verbose_name='Description Of Services')),
                ('status', models.CharField(choices=[('1', 'Pending Approval'), ('2', 'Approved'), ('3', 'Pending collection '), ('4', 'Collection received')], default='1', max_length=255, verbose_name='Status')),
                ('invoice_number', models.CharField(blank=True, max_length=255, unique=True)),
                ('is_digital_signature_required', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.contract')),
            ],
            options={
                'verbose_name': 'Client Invoice',
                'verbose_name_plural': 'Client Invoices',
                'db_table': 'client_invoices',
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pan_card', models.FileField(blank=True, null=True, upload_to='bank_documents/', validators=[apps.finance.models.validate_file_or_image])),
                ('aadhar_card', models.FileField(blank=True, null=True, upload_to='bank_documents/', validators=[apps.finance.models.validate_file_or_image])),
                ('account_holder_name', models.CharField(max_length=255, verbose_name="Account Holder's Name")),
                ('pan_card_number', models.CharField(max_length=125, verbose_name='PAN Card Number')),
                ('bank_name', models.CharField(max_length=255, verbose_name='Bank Name')),
                ('account_number', models.CharField(max_length=125, verbose_name='Account Number')),
                ('ifsc_code', models.CharField(max_length=125, verbose_name='IFSC Code')),
                ('branch', models.CharField(max_length=255, verbose_name='Branch')),
                ('city', models.CharField(max_length=255, verbose_name='City')),
                ('bank_statement_or_cheque', models.FileField(blank=True, null=True, upload_to='bank_documents/', validators=[apps.finance.models.validate_file_or_image])),
                ('account_type', models.CharField(max_length=125, verbose_name='Account Type')),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='common.users')),
            ],
            options={
                'verbose_name': 'bank account',
                'verbose_name_plural': 'bank accounts',
                'db_table': 'finance_bank_account',
            },
        ),
    ]
